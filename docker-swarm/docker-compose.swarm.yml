version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongo_root_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_root_password
      MONGO_INITDB_DATABASE: library
    secrets:
      - mongo_root_username
      - mongo_root_password
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mern_network
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    image: lalbudha47/mern-backend:v1
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    environment:
      NODE_ENV: production
      PORT: 5000
    secrets:
      - source: mongodb_uri
        target: /run/secrets/mongodb_uri
    configs:
      - source: backend_config
        target: /app/config.json
    networks:
      - mern_network
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    image: lalbudha47/mern-frontend:v1
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    configs:
      - source: frontend_config
        target: /app/.env.production
    networks:
      - mern_network
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
    networks:
      - mern_network
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend

networks:
  mern_network:
    driver: overlay
    attachable: true

volumes:
  mongo_data:
    driver: local

secrets:
  mongo_root_username:
    external: true
  mongo_root_password:
    external: true
  mongodb_uri:
    external: true

configs:
  backend_config:
    external: true
  frontend_config:
    external: true
  nginx_config:
    external: true